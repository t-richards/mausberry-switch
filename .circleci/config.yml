version: 2.1

jobs:
  build:
    docker:
      - image: debian:buster
        environment:
          CFLAGS: -O2 -pipe -fstack-protector-strong -fno-plt
          CPPFLAGS: -D_FORTIFY_SOURCE=2
          DEBIAN_FRONTEND: noninteractive
          LDFLAGS: -Wl,-O1,--sort-common,--as-needed,-z,relro
          PKG_CONFIG_ALLOW_CROSS: 1
          PKG_CONFIG_PATH: /usr/lib/arm-linux-gnueabihf/pkgconfig/

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            dpkg --add-architecture armhf
            apt-get update -q
            apt-get install -qy crossbuild-essential-armhf dh-autoreconf libglib2.0-dev:armhf ruby ruby-dev

      - run:
          name: Install fpm
          command: gem install --no-document fpm

      - run:
          name: Create install directory
          command: mkdir -p /tmp/installdir

      - run:
          name: Autoreconf
          command: autoreconf -i -f

      - run:
          name: Configure
          command: ./configure --prefix=/usr --sysconfdir=/etc --build=x86_64-linux-gnu --host=arm-linux-gnueabihf

      - run:
          name: Make
          command: make

      - run:
          name: Make install
          command: make DESTDIR=/tmp/installdir install-strip

      - run:
          name: Build debian package
          command: |
            fpm \
              -f \
              -s dir \
              -t deb \
              -a armhf \
              -n mausberry-switch \
              -v 0.8 \
              -C /tmp/installdir \
              -p mausberry-switch_VERSION_ARCH.deb \
              -d "libglib2.0-0 >= 2.42" \
              --deb-systemd data/mausberry-switch.service \
              usr/bin etc

      - run:
          name: Inspect package contents
          command: |
            ar x mausberry-switch_*.deb
            tar tvf data.tar.gz

      - store_artifacts:
          path: mausberry-switch_0.8_armhf.deb

  test:
    docker:
      - image: debian:buster
        environment:
          CFLAGS: -O2 -pipe -fstack-protector-strong -fno-plt
          CPPFLAGS: -D_FORTIFY_SOURCE=2
          DEBIAN_FRONTEND: noninteractive
          LDFLAGS: -Wl,-O1,--sort-common,--as-needed,-z,relro

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            apt-get update -q
            apt-get install -qy build-essential dh-autoreconf libglib2.0-dev ruby ruby-dev

      - run:
          name: Autoreconf
          command: autoreconf -i -f

      - run:
          name: Configure
          command: ./configure --prefix=/usr --sysconfdir=/etc

      - run:
          name: Make
          command: make

      - run:
          name: Test
          command: make check

  lint:
    docker:
      - image: alpine:3.12

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: apk add --no-cache --update clang

      - run:
          name: Lint code
          command: clang-format --dry-run --Werror src/*.c src/*.h

  scan:
    docker:
      - image: alpine:3.12
        environment:
          CC: clang

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: apk add --no-cache --update alpine-sdk automake autoconf clang clang-analyzer glib-dev libtool

      - run:
          name: Setup build
          command: |
            autoreconf -i -f
            ./configure

      - run:
          name: Scan build
          command: scan-build make

workflows:
  main:
    jobs:
      - build
      - test
      - lint
      - scan
